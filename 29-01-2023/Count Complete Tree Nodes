/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int count = 0;
    public int countNodes(TreeNode root) {
        if(root == null)    return 0;
        if(root.left == null && root.right == null) return 1;
        Queue<TreeNode> queue  = new LinkedList<>();
        queue.add(root);
        count++;
        while(!queue.isEmpty()){
            int size = queue.size();
            for(int i = 0 ; i < size ; i++){
                TreeNode curr  = queue.poll();
                if(curr.left != null){
                    queue.add(curr.left);
                    count++;
                }
                if(curr.right != null){
                    queue.add(curr.right );
                    count++;
                }
            }
        }
        return count;
    }
}
