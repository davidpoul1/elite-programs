/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root == null){
            return true;
        }
        TreeNode rootleft = root.left;
        TreeNode rootrigth = root.right;
        return Symmetric(rootleft , rootrigth);
    }

    public boolean Symmetric(TreeNode rootleft , TreeNode rootright){
        if(rootleft == null && rootright == null){
            return true;
        }
        else if(rootleft == null || rootright == null){
            return false;
        }
        boolean result = Symmetric(rootleft.left , rootright.right);
        boolean result1 = Symmetric(rootleft.right , rootright.left);
        if(rootleft.val == rootright.val && result == true && result1 == true){
            return true;
        }
        else    return false;
    }
}
